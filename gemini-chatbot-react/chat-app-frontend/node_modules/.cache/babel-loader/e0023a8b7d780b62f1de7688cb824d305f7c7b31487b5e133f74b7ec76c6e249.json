{"ast":null,"code":"var _jsxFileName = \"/Users/swethabatta/Desktop/product-portfolio-swetha/gemini-chatbot-react/chat-app-frontend/src/ChatApp.js\",\n  _s = $RefreshSig$();\n// ChatApp.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport './ChatApp.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatApp() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const chatbox = useRef(null);\n  const goToTop = () => {\n    window.scrollTo(0, 0);\n  };\n  useEffect(() => {\n    //chatbox.current.scrollIntoView(false);\n    //goToTop();\n    window.scrollTo({\n      bottom: chatbox.current.offsetBottom,\n      left: 0,\n      behavior: \"smooth\"\n    });\n    fetchData(); // Fetch initial messages when component mounts\n    const interval = setInterval(fetchData, 5000); // Poll server every 5 seconds for new messages\n    return () => clearInterval(interval); // Cleanup interval on component unmount\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/data');\n      setMessages(response.data.messages);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const sendMessage = async () => {\n    if (input.trim() !== '') {\n      setInput('');\n      window.scrollTo({\n        bottom: chatbox.current.offsetBottom,\n        left: 0,\n        behavior: \"smooth\"\n      });\n      //goToTop();\n      try {\n        await axios.post('http://localhost:5000/api/data', {\n          message: {\n            text: input,\n            sender: 'Swetha'\n          }\n        });\n        fetchData(); // Fetch updated messages after sending a new one\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  const formatDate = date => {\n    return new Date().toLocaleString('en-US', {\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      class: \"msger-header\",\n      children: \"Chat support\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatbox,\n        className: \"chat-messages\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"msg-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"msg-info-name\",\n              children: message.sender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"msg-info-time\",\n              children: formatDate(new Date())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your message...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => {\n            if (e.key === \"Enter\") sendMessage();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatApp, \"eAO6WJP5fP6vlqCqKY1HeczbgoA=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","ChatApp","_s","messages","setMessages","input","setInput","chatbox","goToTop","window","scrollTo","bottom","current","offsetBottom","left","behavior","fetchData","interval","setInterval","clearInterval","response","get","data","error","console","sendMessage","trim","post","message","text","sender","formatDate","date","Date","toLocaleString","hour","minute","hour12","className","children","class","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","index","type","placeholder","value","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["/Users/swethabatta/Desktop/product-portfolio-swetha/gemini-chatbot-react/chat-app-frontend/src/ChatApp.js"],"sourcesContent":["// ChatApp.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport './ChatApp.css';\nimport axios from 'axios';\n\nfunction ChatApp() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const chatbox = useRef(null);\n\n  const goToTop = () => {        \n    window.scrollTo(0, 0);        \n  };\n\n  useEffect(() => {\n    //chatbox.current.scrollIntoView(false);\n    //goToTop();\n    window.scrollTo({bottom: chatbox.current.offsetBottom, left: 0, behavior: \"smooth\"});\n    fetchData(); // Fetch initial messages when component mounts\n    const interval = setInterval(fetchData, 5000); // Poll server every 5 seconds for new messages\n    return () => clearInterval(interval); // Cleanup interval on component unmount\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/data');\n      setMessages(response.data.messages);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const sendMessage = async () => {\n    if (input.trim() !== '') {\n      setInput('');\n      window.scrollTo({bottom: chatbox.current.offsetBottom, left: 0, behavior: \"smooth\"});\n      //goToTop();\n      try {\n        await axios.post('http://localhost:5000/api/data', {message: { text: input, sender: 'Swetha' }});\n        fetchData(); // Fetch updated messages after sending a new one\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n\n  const formatDate = (date: Date) => {\n    return new Date().toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });\n  }\n\n  return (\n    <div className=\"chat-container\">\n        <header class=\"msger-header\">Chat support</header>\n        <div className=\"chat-app\">\n            <div ref={chatbox} className=\"chat-messages\">\n                {messages.map((message, index) => (\n                    <div  key={index} className={`message ${message.sender}`}>\n                        <div class=\"msg-info\">\n                        <div class=\"msg-info-name\">{message.sender}</div>\n                        <div class=\"msg-info-time\">{formatDate(new Date())}</div>\n                        </div>\n                        <div>{message.text}</div>\n                        \n                </div>\n                ))}\n            </div>\n            <div className=\"chat-input\">\n                <input\n                type=\"text\"\n                placeholder=\"Type your message...\"\n                value={input}\n                onChange={e => setInput(e.target.value)}\n                onKeyDown={(e) => {\n                    if (e.key === \"Enter\")\n                        sendMessage();\n                    }}\n                />\n                <button type=\"submit\" onClick={sendMessage}>Send</button>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default ChatApp;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,eAAe;AACtB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMY,OAAO,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE5B,MAAMW,OAAO,GAAGA,CAAA,KAAM;IACpBC,MAAM,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EACvB,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd;IACA;IACAa,MAAM,CAACC,QAAQ,CAAC;MAACC,MAAM,EAAEJ,OAAO,CAACK,OAAO,CAACC,YAAY;MAAEC,IAAI,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAQ,CAAC,CAAC;IACpFC,SAAS,CAAC,CAAC,CAAC,CAAC;IACb,MAAMC,QAAQ,GAAGC,WAAW,CAACF,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;IAC/C,OAAO,MAAMG,aAAa,CAACF,QAAQ,CAAC,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMD,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,gCAAgC,CAAC;MAClEjB,WAAW,CAACgB,QAAQ,CAACE,IAAI,CAACnB,QAAQ,CAAC;IACrC,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIpB,KAAK,CAACqB,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACvBpB,QAAQ,CAAC,EAAE,CAAC;MACZG,MAAM,CAACC,QAAQ,CAAC;QAACC,MAAM,EAAEJ,OAAO,CAACK,OAAO,CAACC,YAAY;QAAEC,IAAI,EAAE,CAAC;QAAEC,QAAQ,EAAE;MAAQ,CAAC,CAAC;MACpF;MACA,IAAI;QACF,MAAMjB,KAAK,CAAC6B,IAAI,CAAC,gCAAgC,EAAE;UAACC,OAAO,EAAE;YAAEC,IAAI,EAAExB,KAAK;YAAEyB,MAAM,EAAE;UAAS;QAAC,CAAC,CAAC;QAChGd,SAAS,CAAC,CAAC,CAAC,CAAC;MACf,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF;EACF,CAAC;EAED,MAAMQ,UAAU,GAAIC,IAAU,IAAK;IACjC,OAAO,IAAIC,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC,OAAO,EAAE;MAAEC,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAK,CAAC,CAAC;EACjG,CAAC;EAED,oBACErC,OAAA;IAAKsC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BvC,OAAA;MAAQwC,KAAK,EAAC,cAAc;MAAAD,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClD5C,OAAA;MAAKsC,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACrBvC,OAAA;QAAK6C,GAAG,EAAEtC,OAAQ;QAAC+B,SAAS,EAAC,eAAe;QAAAC,QAAA,EACvCpC,QAAQ,CAAC2C,GAAG,CAAC,CAAClB,OAAO,EAAEmB,KAAK,kBACzB/C,OAAA;UAAkBsC,SAAS,EAAG,WAAUV,OAAO,CAACE,MAAO,EAAE;UAAAS,QAAA,gBACrDvC,OAAA;YAAKwC,KAAK,EAAC,UAAU;YAAAD,QAAA,gBACrBvC,OAAA;cAAKwC,KAAK,EAAC,eAAe;cAAAD,QAAA,EAAEX,OAAO,CAACE;YAAM;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACjD5C,OAAA;cAAKwC,KAAK,EAAC,eAAe;cAAAD,QAAA,EAAER,UAAU,CAAC,IAAIE,IAAI,CAAC,CAAC;YAAC;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpD,CAAC,eACN5C,OAAA;YAAAuC,QAAA,EAAMX,OAAO,CAACC;UAAI;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GALlBG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOf,CACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACN5C,OAAA;QAAKsC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBvC,OAAA;UACAgD,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,sBAAsB;UAClCC,KAAK,EAAE7C,KAAM;UACb8C,QAAQ,EAAEC,CAAC,IAAI9C,QAAQ,CAAC8C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UACxCI,SAAS,EAAGF,CAAC,IAAK;YACd,IAAIA,CAAC,CAACG,GAAG,KAAK,OAAO,EACjB9B,WAAW,CAAC,CAAC;UACjB;QAAE;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACF5C,OAAA;UAAQgD,IAAI,EAAC,QAAQ;UAACQ,OAAO,EAAE/B,WAAY;UAAAc,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAAC1C,EAAA,CA7EQD,OAAO;AAAAwD,EAAA,GAAPxD,OAAO;AA+EhB,eAAeA,OAAO;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}